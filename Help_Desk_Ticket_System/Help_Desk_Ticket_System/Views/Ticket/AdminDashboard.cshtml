@model List<Help_Desk_Ticket_System.Models.Ticket>
@{
    ViewData["Title"] = "Admin Dashboard";
}

<h2>Admin Dashboard</h2>

<!-- Summary Cards -->
<div class="row">
    <div class="col-md-4">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <h5>Total Tickets</h5>
                <h3>@ViewBag.TotalTickets</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-warning text-dark">
            <div class="card-body">
                <h5>Pending Tickets</h5>
                <h3>@ViewBag.PendingTickets</h3>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-success text-white">
            <div class="card-body">
                <h5>Resolved Tickets</h5>
                <h3>@ViewBag.ResolvedTickets</h3>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<form asp-action="AdminDashboard" method="get" class="mt-3">
    <div class="row">
        <div class="col-md-3">
            <select name="status" class="form-control">
                <option value="">Filter by Status</option>
                @foreach (var status in ViewBag.Statuses)
                {
                    <option value="@status">@status</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="priority" class="form-control">
                <option value="">Filter by Priority</option>
                @foreach (var priority in ViewBag.Priorities)
                {
                    <option value="@priority">@priority</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="assignedAdmin" class="form-control">
                <option value="">Filter by Assigned Admin</option>
                @foreach (var admin in ViewBag.Admins)
                {
                    <option value="@admin.Value">@admin.Text</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Apply Filters</button>
        </div>
    </div>
</form>

<!-- Tickets Table -->
<table class="table table-striped mt-3">
    <thead>
        <tr>
            <th>Title</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Category</th>
            <th>Assigned Admin</th>
            <th>Date Submitted</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ticket in Model)
        {
            <tr>
                <td>@ticket.Title</td>
                <td>@ticket.Status</td>
                <td>@ticket.Priority</td>
                <td>@ticket.Category</td>
                <td>@(ticket.AssignedAdmin != null ? ticket.AssignedAdmin.Name : "Unassigned")</td>
                <td>@ticket.DateSubmitted.ToString("yyyy-MM-dd")</td>
            </tr>
        }
    </tbody>
</table>

<!-- Charts Section -->
<div class="row mt-4">
    <div class="col-md-6">
        <h4>Tickets by Category</h4>
        <canvas id="categoryChart"></canvas>
    </div>
    <div class="col-md-6">
        <h4>Tickets Resolved per Admin</h4>
        <canvas id="adminChart"></canvas>
    </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Tickets by Category Chart
        var categoryData = @Html.Raw(Json.Serialize(ViewBag.TicketsByCategory));
        var ctx1 = document.getElementById('categoryChart').getContext('2d');
        new Chart(ctx1, {
            type: 'pie',
            data: {
                labels: categoryData.map(c => c.Category),
                datasets: [{
                    data: categoryData.map(c => c.Count),
                    backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745']
                }]
            }
        });

        // Tickets Resolved per Admin Chart
        var adminData = @Html.Raw(Json.Serialize(ViewBag.TicketsResolvedPerAdmin));
        var ctx2 = document.getElementById('adminChart').getContext('2d');
        new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: adminData.map(a => a.Admin),
                datasets: [{
                    label: 'Tickets Resolved',
                    data: adminData.map(a => a.Count),
                    backgroundColor: '#17a2b8'
                }]
            }
        });
    });
</script>
